(******************************************************************************)
(*   Copyright (C) 2014-2015 THALES Communication & Security                  *)
(*   All Rights Reserved                                                      *)
(*   KTD SCIS 2014-2015                                                       *)
(*   Use Case Legacy TOSA                                                     *)
(*   author: Hugues Balp                                                      *)
(*                                                                            *)
(******************************************************************************)

(* type all_symbols = { *)
(*   ?application : string option; *)
(*   dir : string; *)
(*   path : string; *)
(*   dir_symbols : dir_symbols list; *)
(* } *)

type dir_symbols = {
  (* eClass : string; *)
  directory : string;
  path : string;
  depth : int;
  file_symbols : file list;
  ?subdirs : string list option;
}

type dir = {
  (* eClass : string; *)
  dir : string;
  ?files : string list option;
  ?childrens : dir list option;
}

type file = {
  (* eClass : string; *)
  file : string;
  ?path : string option;
  ?namespaces : namespace list option;
  ?records : record list option;
  ?declared : fct_decl list option;
  ?defined : fct_def list option;
}

type extfct = {
  sign : string;
  mangled : string;
}

type extfctdecl = {
  inherit extfct;
  decl : string;
}

type extfctdef = {
  inherit extfct;
  def : string;
}

type builtin = {
  sign : string;
  decl : string;
}

type namespace = {
    name : string;
    qualifier : string;
    (* ?namespaces : namespace list option; *)
    (* ?records : record list option; *)
    (* ?defined : fct_def list option; *)
  }

type record = {
  (* eClass : string; *)
  name : string;
  kind : string;
  debut : int;
  fin : int;
  ?inherits : inheritance list option;
  ?inherited : inheritance list option;
}

type inheritance = {
  record : string;
  file : string;
  debut : int;
  fin : int;
}

type fct = {
  (* eClass : string; *)
  sign : string;
  line : int;
  mangled : string;
  ?virtuality : string option;
}

type fct_decl = {
  inherit fct;
  ?redeclared <ocaml mutable>: extfctdecl option;
  ?redeclarations : extfctdecl list option;
  ?definitions : string list option;
  ?locallers : string list option;
  ?extcallers : extfctdef list option;
}

type fct_def = {
  inherit fct;
  ?decl : string option;
  ?locallees : string list option;
  ?extcallees : extfctdecl list option;
  ?builtins : builtin list option;
}

(* Local Variables: *)
(* mode: tuareg *)
(* compile-command: "mkdir -p _build && atdgen -t callgraph.atd -o _build/callers && atdgen -j callers.atd -o _build/callers" *)
(* compile-command: "atdgen -t callers.atd && atdgen -j callers.atd" *)
(* End: *)
