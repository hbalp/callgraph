
(* tangled from ~/org/technology/data/data.org *)

(* type all_symbols = { *)
(*   ?application : string option; *)
(*   dir : string; *)
(*   path : string; *)
(*   dir_symbols : dir_symbols list; *)
(* } *)

type dir_symbols = {
  directory : string;
  path : string;
  depth : int;
  file_symbols : file list;
  ?subdirs : string list option;
}
 
type dir = {
  dir : string;
  ?files : string list option;
  ?childrens : dir list option;
}

type file = {
  file : string;
  ?path : string option;
  ?namespaces : namespace list option;
  ?records : record list option;
  ?declared : fct_decl list option;
  ?defined : fct_def list option;
}

type extfct = {
  sign : string;
  decl : string;
  def : string;
}

type builtin = {
  sign : string;
  decl : string;
}

type namespace = {
    name : string;
    qualifier : string;
    (* ?namespaces : namespace list option; *)
    (* ?records : record list option; *)
    (* ?defined : fct_def list option; *)
  }

type record = {
  fullname : string;
  kind : string;
  loc : int;
  ?inherits : inheritance list option;
  ?inherited : inheritance list option;
}

type inheritance = {
  record : string;
  decl : string;
}

type fct_decl = {
  sign : string;
  line : int;
  ?virtuality : string option;
  ?redeclarations : extfct list option;
  ?definitions : extfct list option;
  ?redefinitions : extfct list option;
  ?locallers : string list option;
  ?extcallers : extfct list option;
}

type fct_def = {
  sign : string;
  line : int;
  ?decl : string option;
  ?virtuality : string option;
  ?locallers : string list option;
  ?locallees : string list option;
  ?extcallers : extfct list option;
  ?extcallees : extfct list option;
  ?builtins : builtin list option;
}

(* Local Variables: *)
(* mode: tuareg *)
(* compile-command: "mkdir -p _build && atdgen -t callgraph.atd -o _build/callgraph && atdgen -j callgraph.atd -o _build/callgraph" *)
(* compile-command: "atdgen -t callgraph.atd && atdgen -j callgraph.atd" *)
(* End: *)
