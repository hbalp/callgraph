(******************************************************************************)
(*   Copyright (C) 2014-2015 THALES Communication & Security                  *)
(*   All Rights Reserved                                                      *)
(*   European IST STANCE project (2011-2015)                                  *)
(*   author: Hugues Balp                                                      *)
(*                                                                            *)
(******************************************************************************)
(* ATD projection of the callgraph.ecore data types defined as follows: *)
(* package callgraph : callgraph = 'http://callgraph' *)
(* { *)
(*     class dir *)
(*     { *)
(* 	attribute name : String[1]; *)
(* 	property children : dir[*] { ordered composes }; *)
(* 	property files : file[*] { ordered composes }; *)
(*     } *)
(*     class file *)
(*     { *)
(* 	attribute name : String[1]; *)
(* 	property declared : function[*] { ordered composes }; *)
(* 	property defined : function[*] { ordered composes }; *)
(*     } *)
(*     class function *)
(*     { *)
(* 	attribute sign : String[1] { id }; *)
(* 	property locallees : function[*] { ordered }; *)
(* 	property extcallees : function[*] { ordered }; *)
(* 	property locallers : function[*] { ordered }; *)
(* 	property extcallers : function[*] { ordered }; *)
(*     } *)
(* } *)

type dirs = {
  path : string;
  ?dir <ocaml mutable> : dir list option;
}

type dir = {
  (* eClass : string; *)
  name : string;
  (* depth : int; *)
  path : string;
  ?uses <ocaml mutable> : string list option;
  (* ?children <ocaml mutable> : dir list option; *)
  ?children <ocaml mutable> : string list option;
  ?parents <ocaml mutable> : string list option;
  ?files <ocaml mutable> : file list option;
}

type file = {
  (* eClass : string; *)
  name : string;
  ?uses <ocaml mutable> : string list option;
  (* ?records : record list option; *)
  ?declared <ocaml mutable> : fonction list option;
  ?defined <ocaml mutable> : fonction list option;
}

(* type record = { *)
(*   fullname : string; *)
(*   kind : string; *)
(*   loc : int; *)
(*   ?inherits : inheritance list option; *)
(*   ?inherited : inheritance list option; *)
(* } *)

(* type inheritance = { *)
(*   record : string; *)
(*   decl : string; *)
(* } *)

type fct_ref = {
  sign : string;
  virtuality : string;
}

type extfct_ref = {
  sign : string;
  virtuality : string;
  file : string;
}

type fonction = {
  (* eClass : string; *)
  sign : string;
  (* line : int; *)
  ?virtuality : string option;
  (* ?redeclarations : extfct list option; *)
  (* ?definitions : string list option; *)
  (* ?redefinitions : extfct list option; *)
  ?locallers <ocaml mutable>: fct_ref list option;
  ?locallees <ocaml mutable>: fct_ref list option;
  ?extcallers <ocaml mutable>: extfct_ref list option;
  ?extcallees <ocaml mutable>: extfct_ref list option;
  ?virtcallers <ocaml mutable>: extfct_ref list option;
  ?virtcallees <ocaml mutable>: extfct_ref list option;
  (* ?builtins : builtin list option; *)
}

(* Local Variables: *)
(* mode: tuareg *)
(* compile-command: "mkdir -p _build && atdgen -t callgraph.atd -o _build/callgraph && atdgen -j callgraph.atd -o _build/callgraph" *)
(* compile-command: "atdgen -t callgraph.atd && atdgen -j callgraph.atd" *)
(* End: *)
